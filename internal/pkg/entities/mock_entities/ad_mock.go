// Code generated by MockGen. DO NOT EDIT.
// Source: ad.go

// Package mock_entities is a generated GoMock package.
package mock_entities

import (
	entities "AdHub/internal/pkg/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAdRepoInterface is a mock of AdRepoInterface interface.
type MockAdRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAdRepoInterfaceMockRecorder
}

// ReaByTarget mocks the ReaByTarget method of AdRepoInterface.
func (m *MockAdRepoInterface) ReaByTarget(id int) ([]*entities.Ad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadByTarget", id)
	ret0, _ := ret[0].([]*entities.Ad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReaByTarget indicates an expected call of ReaByTarget.
func (mr *MockAdRepoInterfaceMockRecorder) ReaByTarget(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadByTarget", reflect.TypeOf((*MockAdRepoInterface)(nil).ReaByTarget), id)
}

// MockAdRepoInterfaceMockRecorder is the mock recorder for MockAdRepoInterface.
type MockAdRepoInterfaceMockRecorder struct {
	mock *MockAdRepoInterface
}

// NewMockAdRepoInterface creates a new mock instance.
func NewMockAdRepoInterface(ctrl *gomock.Controller) *MockAdRepoInterface {
	mock := &MockAdRepoInterface{ctrl: ctrl}
	mock.recorder = &MockAdRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdRepoInterface) EXPECT() *MockAdRepoInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAdRepoInterface) Create(s *entities.Ad) (*entities.Ad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", s)
	ret0, _ := ret[0].(*entities.Ad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockAdRepoInterfaceMockRecorder) Create(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAdRepoInterface)(nil).Create), s)
}

// Get mocks base method.
func (m *MockAdRepoInterface) Get(id int) (*entities.Ad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(*entities.Ad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAdRepoInterfaceMockRecorder) Get(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAdRepoInterface)(nil).Get), id)
}

// Read mocks base method.
func (m *MockAdRepoInterface) Read(id int) ([]*entities.Ad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", id)
	ret0, _ := ret[0].([]*entities.Ad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockAdRepoInterfaceMockRecorder) Read(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockAdRepoInterface)(nil).Read), id)
}

// Remove mocks base method.
func (m *MockAdRepoInterface) Remove(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockAdRepoInterfaceMockRecorder) Remove(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockAdRepoInterface)(nil).Remove), id)
}

// Update mocks base method.
func (m *MockAdRepoInterface) Update(s *entities.Ad) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockAdRepoInterfaceMockRecorder) Update(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockAdRepoInterface)(nil).Update), s)
}

// MockAdUseCaseInterface is a mock of AdUseCaseInterface interface.
type MockAdUseCaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAdUseCaseInterfaceMockRecorder
}

// MockAdUseCaseInterfaceMockRecorder is the mock recorder for MockAdUseCaseInterface.
type MockAdUseCaseInterfaceMockRecorder struct {
	mock *MockAdUseCaseInterface
}

// NewMockAdUseCaseInterface creates a new mock instance.
func NewMockAdUseCaseInterface(ctrl *gomock.Controller) *MockAdUseCaseInterface {
	mock := &MockAdUseCaseInterface{ctrl: ctrl}
	mock.recorder = &MockAdUseCaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdUseCaseInterface) EXPECT() *MockAdUseCaseInterfaceMockRecorder {
	return m.recorder
}

// AdCreate mocks base method.
func (m *MockAdUseCaseInterface) AdCreate(ad *entities.Ad) (*entities.Ad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdCreate", ad)
	ret0, _ := ret[0].(*entities.Ad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AdCreate indicates an expected call of AdCreate.
func (mr *MockAdUseCaseInterfaceMockRecorder) AdCreate(ad interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdCreate", reflect.TypeOf((*MockAdUseCaseInterface)(nil).AdCreate), ad)
}

// AdRead mocks base method.
func (m *MockAdUseCaseInterface) AdRead(id int) (*entities.Ad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdRead", id)
	ret0, _ := ret[0].(*entities.Ad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AdRead indicates an expected call of AdRead.
func (mr *MockAdUseCaseInterfaceMockRecorder) AdRead(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdRead", reflect.TypeOf((*MockAdUseCaseInterface)(nil).AdRead), id)
}

// AdReadList mocks base method.
func (m *MockAdUseCaseInterface) AdReadList(id int) ([]*entities.Ad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdReadList", id)
	ret0, _ := ret[0].([]*entities.Ad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AdReadList indicates an expected call of AdReadList.
func (mr *MockAdUseCaseInterfaceMockRecorder) AdReadList(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdReadList", reflect.TypeOf((*MockAdUseCaseInterface)(nil).AdReadList), id)
}

// AdRemove mocks base method.
func (m *MockAdUseCaseInterface) AdRemove(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdRemove", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// AdRemove indicates an expected call of AdRemove.
func (mr *MockAdUseCaseInterfaceMockRecorder) AdRemove(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdRemove", reflect.TypeOf((*MockAdUseCaseInterface)(nil).AdRemove), id)
}

// AdUpdate mocks base method.
func (m *MockAdUseCaseInterface) AdUpdate(s *entities.Ad) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdUpdate", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// AdUpdate indicates an expected call of AdUpdate.
func (mr *MockAdUseCaseInterfaceMockRecorder) AdUpdate(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdUpdate", reflect.TypeOf((*MockAdUseCaseInterface)(nil).AdUpdate), s)
}
