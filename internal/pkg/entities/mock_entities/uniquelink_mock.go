// Code generated by MockGen. DO NOT EDIT.
// Source: uniquelink.go

// Package mock_entities is a generated GoMock package.
package mock_entities

import (
	entities "AdHub/internal/pkg/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockULinkUseCaseInterface is a mock of ULinkUseCaseInterface interface.
type MockULinkUseCaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockULinkUseCaseInterfaceMockRecorder
}

// MockULinkUseCaseInterfaceMockRecorder is the mock recorder for MockULinkUseCaseInterface.
type MockULinkUseCaseInterfaceMockRecorder struct {
	mock *MockULinkUseCaseInterface
}

// NewMockULinkUseCaseInterface creates a new mock instance.
func NewMockULinkUseCaseInterface(ctrl *gomock.Controller) *MockULinkUseCaseInterface {
	mock := &MockULinkUseCaseInterface{ctrl: ctrl}
	mock.recorder = &MockULinkUseCaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockULinkUseCaseInterface) EXPECT() *MockULinkUseCaseInterfaceMockRecorder {
	return m.recorder
}

// GetAdId mocks base method.
func (m *MockULinkUseCaseInterface) GetAdId(token string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdId", token)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdId indicates an expected call of GetAdId.
func (mr *MockULinkUseCaseInterfaceMockRecorder) GetAdId(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdId", reflect.TypeOf((*MockULinkUseCaseInterface)(nil).GetAdId), token)
}

// ULinkContains mocks base method.
func (m *MockULinkUseCaseInterface) ULinkContains(sr *entities.ULink) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ULinkContains", sr)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ULinkContains indicates an expected call of ULinkContains.
func (mr *MockULinkUseCaseInterfaceMockRecorder) ULinkContains(sr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ULinkContains", reflect.TypeOf((*MockULinkUseCaseInterface)(nil).ULinkContains), sr)
}

// ULinkCreate mocks base method.
func (m *MockULinkUseCaseInterface) ULinkCreate(sr *entities.ULink) (*entities.ULink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ULinkCreate", sr)
	ret0, _ := ret[0].(*entities.ULink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ULinkCreate indicates an expected call of ULinkCreate.
func (mr *MockULinkUseCaseInterfaceMockRecorder) ULinkCreate(sr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ULinkCreate", reflect.TypeOf((*MockULinkUseCaseInterface)(nil).ULinkCreate), sr)
}

// ULinkRead mocks base method.
func (m *MockULinkUseCaseInterface) ULinkRead(sr *entities.ULink) (*entities.ULink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ULinkRead", sr)
	ret0, _ := ret[0].(*entities.ULink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ULinkRead indicates an expected call of ULinkRead.
func (mr *MockULinkUseCaseInterfaceMockRecorder) ULinkRead(sr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ULinkRead", reflect.TypeOf((*MockULinkUseCaseInterface)(nil).ULinkRead), sr)
}

// ULinkRemove mocks base method.
func (m *MockULinkUseCaseInterface) ULinkRemove(sr *entities.ULink) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ULinkRemove", sr)
	ret0, _ := ret[0].(error)
	return ret0
}

// ULinkRemove indicates an expected call of ULinkRemove.
func (mr *MockULinkUseCaseInterfaceMockRecorder) ULinkRemove(sr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ULinkRemove", reflect.TypeOf((*MockULinkUseCaseInterface)(nil).ULinkRemove), sr)
}

// MockULinkRepoInterface is a mock of ULinkRepoInterface interface.
type MockULinkRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockULinkRepoInterfaceMockRecorder
}

// MockULinkRepoInterfaceMockRecorder is the mock recorder for MockULinkRepoInterface.
type MockULinkRepoInterfaceMockRecorder struct {
	mock *MockULinkRepoInterface
}

// NewMockULinkRepoInterface creates a new mock instance.
func NewMockULinkRepoInterface(ctrl *gomock.Controller) *MockULinkRepoInterface {
	mock := &MockULinkRepoInterface{ctrl: ctrl}
	mock.recorder = &MockULinkRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockULinkRepoInterface) EXPECT() *MockULinkRepoInterfaceMockRecorder {
	return m.recorder
}

// Contains mocks base method.
func (m *MockULinkRepoInterface) Contains(s *entities.ULink) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Contains", s)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Contains indicates an expected call of Contains.
func (mr *MockULinkRepoInterfaceMockRecorder) Contains(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Contains", reflect.TypeOf((*MockULinkRepoInterface)(nil).Contains), s)
}

// Create mocks base method.
func (m *MockULinkRepoInterface) Create(s *entities.ULink) (*entities.ULink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", s)
	ret0, _ := ret[0].(*entities.ULink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockULinkRepoInterfaceMockRecorder) Create(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockULinkRepoInterface)(nil).Create), s)
}

// Read mocks base method.
func (m *MockULinkRepoInterface) Read(s *entities.ULink) (*entities.ULink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", s)
	ret0, _ := ret[0].(*entities.ULink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockULinkRepoInterfaceMockRecorder) Read(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockULinkRepoInterface)(nil).Read), s)
}

// Remove mocks base method.
func (m *MockULinkRepoInterface) Remove(s *entities.ULink) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockULinkRepoInterfaceMockRecorder) Remove(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockULinkRepoInterface)(nil).Remove), s)
}
