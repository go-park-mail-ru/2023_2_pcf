// Code generated by MockGen. DO NOT EDIT.
// Source: tag.go

// Package mock_entities is a generated GoMock package.
package mock_entities

import (
	entities "AdHub/internal/pkg/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTagRepoInterface is a mock of TagRepoInterface interface.
type MockTagRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTagRepoInterfaceMockRecorder
}

// MockTagRepoInterfaceMockRecorder is the mock recorder for MockTagRepoInterface.
type MockTagRepoInterfaceMockRecorder struct {
	mock *MockTagRepoInterface
}

// NewMockTagRepoInterface creates a new mock instance.
func NewMockTagRepoInterface(ctrl *gomock.Controller) *MockTagRepoInterface {
	mock := &MockTagRepoInterface{ctrl: ctrl}
	mock.recorder = &MockTagRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTagRepoInterface) EXPECT() *MockTagRepoInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTagRepoInterface) Create(s *entities.Tag) (*entities.Tag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", s)
	ret0, _ := ret[0].(*entities.Tag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockTagRepoInterfaceMockRecorder) Create(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTagRepoInterface)(nil).Create), s)
}

// Read mocks base method.
func (m *MockTagRepoInterface) Read(id int) (*entities.Tag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadByLogin", id)
	ret0, _ := ret[0].(*entities.Tag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockTagRepoInterfaceMockRecorder) Read(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadByLogin", reflect.TypeOf((*MockTagRepoInterface)(nil).Read), id)
}

// Remove mocks base method.
func (m *MockTagRepoInterface) Remove(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockTagRepoInterfaceMockRecorder) Remove(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockTagRepoInterface)(nil).Remove), id)
}

// Update mocks base method.
func (m *MockTagRepoInterface) Update(s *entities.Tag) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockTagRepoInterfaceMockRecorder) Update(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockTagRepoInterface)(nil).Update), s)
}

// MockTagUseCaseInterface is a mock of TagUseCaseInterface interface.
type MockTagUseCaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTagUseCaseInterfaceMockRecorder
}

// MockTagUseCaseInterfaceMockRecorder is the mock recorder for MockTagUseCaseInterface.
type MockTagUseCaseInterfaceMockRecorder struct {
	mock *MockTagUseCaseInterface
}

// NewMockTagUseCaseInterface creates a new mock instance.
func NewMockTagUseCaseInterface(ctrl *gomock.Controller) *MockTagUseCaseInterface {
	mock := &MockTagUseCaseInterface{ctrl: ctrl}
	mock.recorder = &MockTagUseCaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTagUseCaseInterface) EXPECT() *MockTagUseCaseInterfaceMockRecorder {
	return m.recorder
}

// TagCreate mocks base method.
func (m *MockTagUseCaseInterface) TagCreate(s *entities.Tag) (*entities.Tag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagCreate", s)
	ret0, _ := ret[0].(*entities.Tag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagCreate indicates an expected call of TagCreate.
func (mr *MockTagUseCaseInterfaceMockRecorder) TagCreate(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagCreate", reflect.TypeOf((*MockTagUseCaseInterface)(nil).TagCreate), s)
}

// TagRemove mocks base method.
func (m *MockTagUseCaseInterface) TagRemove(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagRemove", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// TagRemove indicates an expected call of TagRemove.
func (mr *MockTagUseCaseInterfaceMockRecorder) TagRemove(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagRemove", reflect.TypeOf((*MockTagUseCaseInterface)(nil).TagRemove), id)
}
