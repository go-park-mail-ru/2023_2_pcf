// Code generated by MockGen. DO NOT EDIT.
// Source: region.go

// Package mock_entities is a generated GoMock package.
package mock_entities

import (
	entities "AdHub/internal/pkg/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRegionRepoInterface is a mock of RegionRepoInterface interface.
type MockRegionRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRegionRepoInterfaceMockRecorder
}

// MockRegionRepoInterfaceMockRecorder is the mock recorder for MockRegionRepoInterface.
type MockRegionRepoInterfaceMockRecorder struct {
	mock *MockRegionRepoInterface
}

// NewMockRegionRepoInterface creates a new mock instance.
func NewMockRegionRepoInterface(ctrl *gomock.Controller) *MockRegionRepoInterface {
	mock := &MockRegionRepoInterface{ctrl: ctrl}
	mock.recorder = &MockRegionRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegionRepoInterface) EXPECT() *MockRegionRepoInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockRegionRepoInterface) Create(s *entities.Region) (*entities.Region, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", s)
	ret0, _ := ret[0].(*entities.Region)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockRegionRepoInterfaceMockRecorder) Create(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRegionRepoInterface)(nil).Create), s)
}

// Read mocks base method.
func (m *MockRegionRepoInterface) Read(id int) (*entities.Region, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", id)
	ret0, _ := ret[0].(*entities.Region)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockRegionRepoInterfaceMockRecorder) Read(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockRegionRepoInterface)(nil).Read), id)
}

// Remove mocks base method.
func (m *MockRegionRepoInterface) Remove(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockRegionRepoInterfaceMockRecorder) Remove(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockRegionRepoInterface)(nil).Remove), id)
}

// Update mocks base method.
func (m *MockRegionRepoInterface) Update(s *entities.Region) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockRegionRepoInterfaceMockRecorder) Update(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockRegionRepoInterface)(nil).Update), s)
}
