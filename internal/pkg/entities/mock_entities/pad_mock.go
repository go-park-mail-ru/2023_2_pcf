// Code generated by MockGen. DO NOT EDIT.
// Source: pad.go

// Package mock_entities is a generated GoMock package.
package mock_entities

import (
	entities "AdHub/internal/pkg/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPadRepoInterface is a mock of PadRepoInterface interface.
type MockPadRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPadRepoInterfaceMockRecorder
}

// MockPadRepoInterfaceMockRecorder is the mock recorder for MockPadRepoInterface.
type MockPadRepoInterfaceMockRecorder struct {
	mock *MockPadRepoInterface
}

// NewMockPadRepoInterface creates a new mock instance.
func NewMockPadRepoInterface(ctrl *gomock.Controller) *MockPadRepoInterface {
	mock := &MockPadRepoInterface{ctrl: ctrl}
	mock.recorder = &MockPadRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPadRepoInterface) EXPECT() *MockPadRepoInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockPadRepoInterface) Create(s *entities.Pad) (*entities.Pad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", s)
	ret0, _ := ret[0].(*entities.Pad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockPadRepoInterfaceMockRecorder) Create(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPadRepoInterface)(nil).Create), s)
}

// Get mocks base method.
func (m *MockPadRepoInterface) Get(id int) (*entities.Pad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(*entities.Pad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockPadRepoInterfaceMockRecorder) Get(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPadRepoInterface)(nil).Get), id)
}

// Read mocks base method.
func (m *MockPadRepoInterface) Read(id int) ([]*entities.Pad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", id)
	ret0, _ := ret[0].([]*entities.Pad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockPadRepoInterfaceMockRecorder) Read(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockPadRepoInterface)(nil).Read), id)
}

// Remove mocks base method.
func (m *MockPadRepoInterface) Remove(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockPadRepoInterfaceMockRecorder) Remove(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockPadRepoInterface)(nil).Remove), id)
}

// Update mocks base method.
func (m *MockPadRepoInterface) Update(s *entities.Pad) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockPadRepoInterfaceMockRecorder) Update(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockPadRepoInterface)(nil).Update), s)
}

// MockPadUseCaseInterface is a mock of PadUseCaseInterface interface.
type MockPadUseCaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPadUseCaseInterfaceMockRecorder
}

// MockPadUseCaseInterfaceMockRecorder is the mock recorder for MockPadUseCaseInterface.
type MockPadUseCaseInterfaceMockRecorder struct {
	mock *MockPadUseCaseInterface
}

// NewMockPadUseCaseInterface creates a new mock instance.
func NewMockPadUseCaseInterface(ctrl *gomock.Controller) *MockPadUseCaseInterface {
	mock := &MockPadUseCaseInterface{ctrl: ctrl}
	mock.recorder = &MockPadUseCaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPadUseCaseInterface) EXPECT() *MockPadUseCaseInterfaceMockRecorder {
	return m.recorder
}

// PadCreate mocks base method.
func (m *MockPadUseCaseInterface) PadCreate(pad *entities.Pad) (*entities.Pad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PadCreate", pad)
	ret0, _ := ret[0].(*entities.Pad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PadCreate indicates an expected call of PadCreate.
func (mr *MockPadUseCaseInterfaceMockRecorder) PadCreate(pad interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PadCreate", reflect.TypeOf((*MockPadUseCaseInterface)(nil).PadCreate), pad)
}

// PadRead mocks base method.
func (m *MockPadUseCaseInterface) PadRead(id int) (*entities.Pad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PadRead", id)
	ret0, _ := ret[0].(*entities.Pad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PadRead indicates an expected call of PadRead.
func (mr *MockPadUseCaseInterfaceMockRecorder) PadRead(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PadRead", reflect.TypeOf((*MockPadUseCaseInterface)(nil).PadRead), id)
}

// PadReadList mocks base method.
func (m *MockPadUseCaseInterface) PadReadList(id int) ([]*entities.Pad, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PadReadList", id)
	ret0, _ := ret[0].([]*entities.Pad)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PadReadList indicates an expected call of PadReadList.
func (mr *MockPadUseCaseInterfaceMockRecorder) PadReadList(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PadReadList", reflect.TypeOf((*MockPadUseCaseInterface)(nil).PadReadList), id)
}

// PadRemove mocks base method.
func (m *MockPadUseCaseInterface) PadRemove(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PadRemove", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// PadRemove indicates an expected call of PadRemove.
func (mr *MockPadUseCaseInterfaceMockRecorder) PadRemove(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PadRemove", reflect.TypeOf((*MockPadUseCaseInterface)(nil).PadRemove), id)
}

// PadUpdate mocks base method.
func (m *MockPadUseCaseInterface) PadUpdate(s *entities.Pad) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PadUpdate", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// PadUpdate indicates an expected call of PadUpdate.
func (mr *MockPadUseCaseInterfaceMockRecorder) PadUpdate(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PadUpdate", reflect.TypeOf((*MockPadUseCaseInterface)(nil).PadUpdate), s)
}
